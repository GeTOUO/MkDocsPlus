{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to the MkDocs+ Project\n\n\nFor information about MkDocs itself or to view the official MkDocs documentation please visit \nmkdocs.org\n.\n\n\nWhat is MkDocs+?\n\n\nWell, it's MkDocs + Something.  If that's not clear, MkDocs+ provides examples of integrating 3rd Party JavaScript libraries with MkDocs. This project started out initially as just a playground where I could test the use of a few javascript libaries and at some point I thought maybe it would be helpful to throw it out on the internet so other people could also see the examples.  There's really nothing super special about this project and most libraries are implemented following their documentation.  However, I hope the examples provided are useful to others somehow.\n\n\nHow to use this site?\n\n\nPlease click on any library name from the menu bar to view examples and in some cases usage information and/or documentation on any special tweaks that were needed.\n\n\nCode\n\n\nThe MkDocs+ Project code is on Github.  You can easily clone a copy and play with the included examples to see exactly how they work.  Each example is held entirely in it's own sub-folder and does not rely on any dependancies outside of that folder with ONE exception.  Both the readthedocs and default MkDocs themes already include jQuery and because of that I am not including it a second time for the examples that require it.\n\n\nCredits\n\n\nFinally, I want to thank the entire MkDocs team for creating MkDocs and give special thanks to d0ugal and waylan for the exceptional support they have provided.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-the-mkdocs-project", 
            "text": "For information about MkDocs itself or to view the official MkDocs documentation please visit  mkdocs.org .", 
            "title": "Welcome to the MkDocs+ Project"
        }, 
        {
            "location": "/#what-is-mkdocs", 
            "text": "Well, it's MkDocs + Something.  If that's not clear, MkDocs+ provides examples of integrating 3rd Party JavaScript libraries with MkDocs. This project started out initially as just a playground where I could test the use of a few javascript libaries and at some point I thought maybe it would be helpful to throw it out on the internet so other people could also see the examples.  There's really nothing super special about this project and most libraries are implemented following their documentation.  However, I hope the examples provided are useful to others somehow.", 
            "title": "What is MkDocs+?"
        }, 
        {
            "location": "/#how-to-use-this-site", 
            "text": "Please click on any library name from the menu bar to view examples and in some cases usage information and/or documentation on any special tweaks that were needed.", 
            "title": "How to use this site?"
        }, 
        {
            "location": "/#code", 
            "text": "The MkDocs+ Project code is on Github.  You can easily clone a copy and play with the included examples to see exactly how they work.  Each example is held entirely in it's own sub-folder and does not rely on any dependancies outside of that folder with ONE exception.  Both the readthedocs and default MkDocs themes already include jQuery and because of that I am not including it a second time for the examples that require it.", 
            "title": "Code"
        }, 
        {
            "location": "/#credits", 
            "text": "Finally, I want to thank the entire MkDocs team for creating MkDocs and give special thanks to d0ugal and waylan for the exceptional support they have provided.", 
            "title": "Credits"
        }, 
        {
            "location": "/flowchartjs/", 
            "text": "Overview\n\n\nFlowchart.js\n allows you to draw simple SVG flow chart diagrams from textual representation of the diagram.  You can find more information about Flowchart.js from it's \nwebsite\n or \nGithub\n.\n\n\nStyle / Javascript Used\n\n\nstyle\n\n.pre {\n    display:       block;\n    unicode-bidi:  embed;\n    font-family:   monospace;\n    white-space:   pre;\n}\n\n/style\n\n\n\n\nscript src =\nraphael.min.js\n/script\n\n\nscript src =\nflowchart.min.js\n/script\n\n\nscript src =\njquery-plugin.js\n/script\n\n\n\n\n\n\n.pre {\n    display:       block;\n    unicode-bidi:  embed;\n    font-family:   monospace;\n    white-space:   pre;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nExamples\n\n\nThis example embeds the chart data directly inside the markdown file then \nuses the jquery-plugin to create the chart.\n\n\ndiv class=\ndiagram\n\nst=\nstart: Start|past:\nhttp://www.google.com[blank]\ne=\nend: Ende|future:\nhttp://www.google.com\nop1=\noperation: My Operation|past\nop2=\noperation: Stuff|current\nsub1=\nsubroutine: My Subroutine|invalid\ncond=\ncondition: Yes \nor No?|approved:\nhttp://www.google.com\nc2=\ncondition: Good idea|rejected\nio=\ninputoutput: catch something...|future\n\nst-\nop1(right)-\ncond\ncond(yes, right)-\nc2\ncond(no)-\nsub1(left)-\nop1\nc2(yes)-\nio-\ne\nc2(no)-\nop2-\ne\n\n/div\n\n\n\nscript\n\n$(\n.diagram\n).flowchart();\n\n/script\n\n\n\n\n\n\nst=>start: Start|past:>http://www.google.com[blank]\ne=>end: Ende|future:>http://www.google.com\nop1=>operation: My Operation|past\nop2=>operation: Stuff|current\nsub1=>subroutine: My Subroutine|invalid\ncond=>condition: Yes \nor No?|approved:>http://www.google.com\nc2=>condition: Good idea|rejected\nio=>inputoutput: catch something...|future\n\nst->op1(right)->cond\ncond(yes, right)->c2\ncond(no)->sub1(left)->op1\nc2(yes)->io->e\nc2(no)->op2->e\n\n\n\n\n\n$(\".diagram\").flowchart();\n\n\n\n\n\nThis example creates the graph entirely from javascript\n\n\ndiv id=\ndiagram\n/div\n\n\nscript\n\nvar code    = 'st=\nstart: Start\\n'\n            + 'e=\nend\\n'\n            + 'op=\noperation: My Operation\\n'\n            + 'cond=\ncondition: Yes or No?\\n'\n\n            + 'st-\nop-\ncond\\n'\n            + 'cond(yes)-\ne\\n'\n            + 'cond(no)-\nop\\n'\n         ;\n\nvar diagram = flowchart.parse(code); \ndiagram.drawSVG('diagram',{theme: 'hand'});\n\n/script\n\n\n\n\n\n\n\n\n\nvar code    = 'st=>start: Start\\n'\n            + 'e=>end\\n'\n            + 'op=>operation: My Operation\\n'\n            + 'cond=>condition: Yes or No?\\n'\n\n            + 'st->op->cond\\n'\n            + 'cond(yes)->e\\n'\n            + 'cond(no)->op\\n'\n         ;\n\nvar diagram = flowchart.parse(code); \ndiagram.drawSVG('diagram',{theme: 'hand'});", 
            "title": "Flowchart"
        }, 
        {
            "location": "/flowchartjs/#overview", 
            "text": "Flowchart.js  allows you to draw simple SVG flow chart diagrams from textual representation of the diagram.  You can find more information about Flowchart.js from it's  website  or  Github .", 
            "title": "Overview"
        }, 
        {
            "location": "/flowchartjs/#style-javascript-used", 
            "text": "style \n.pre {\n    display:       block;\n    unicode-bidi:  embed;\n    font-family:   monospace;\n    white-space:   pre;\n} /style  script src = raphael.min.js /script  script src = flowchart.min.js /script  script src = jquery-plugin.js /script   \n.pre {\n    display:       block;\n    unicode-bidi:  embed;\n    font-family:   monospace;\n    white-space:   pre;\n}", 
            "title": "Style / Javascript Used"
        }, 
        {
            "location": "/flowchartjs/#examples", 
            "text": "This example embeds the chart data directly inside the markdown file then \nuses the jquery-plugin to create the chart.  div class= diagram \nst= start: Start|past: http://www.google.com[blank]\ne= end: Ende|future: http://www.google.com\nop1= operation: My Operation|past\nop2= operation: Stuff|current\nsub1= subroutine: My Subroutine|invalid\ncond= condition: Yes \nor No?|approved: http://www.google.com\nc2= condition: Good idea|rejected\nio= inputoutput: catch something...|future\n\nst- op1(right)- cond\ncond(yes, right)- c2\ncond(no)- sub1(left)- op1\nc2(yes)- io- e\nc2(no)- op2- e /div  script \n$( .diagram ).flowchart(); /script   \nst=>start: Start|past:>http://www.google.com[blank]\ne=>end: Ende|future:>http://www.google.com\nop1=>operation: My Operation|past\nop2=>operation: Stuff|current\nsub1=>subroutine: My Subroutine|invalid\ncond=>condition: Yes \nor No?|approved:>http://www.google.com\nc2=>condition: Good idea|rejected\nio=>inputoutput: catch something...|future\n\nst->op1(right)->cond\ncond(yes, right)->c2\ncond(no)->sub1(left)->op1\nc2(yes)->io->e\nc2(no)->op2->e  \n$(\".diagram\").flowchart();  \nThis example creates the graph entirely from javascript  div id= diagram /div  script \nvar code    = 'st= start: Start\\n'\n            + 'e= end\\n'\n            + 'op= operation: My Operation\\n'\n            + 'cond= condition: Yes or No?\\n'\n\n            + 'st- op- cond\\n'\n            + 'cond(yes)- e\\n'\n            + 'cond(no)- op\\n'\n         ;\n\nvar diagram = flowchart.parse(code); \ndiagram.drawSVG('diagram',{theme: 'hand'}); /script    \nvar code    = 'st=>start: Start\\n'\n            + 'e=>end\\n'\n            + 'op=>operation: My Operation\\n'\n            + 'cond=>condition: Yes or No?\\n'\n\n            + 'st->op->cond\\n'\n            + 'cond(yes)->e\\n'\n            + 'cond(no)->op\\n'\n         ;\n\nvar diagram = flowchart.parse(code); \ndiagram.drawSVG('diagram',{theme: 'hand'});", 
            "title": "Examples"
        }, 
        {
            "location": "/js-sequence-diagrams/", 
            "text": "Overview\n\n\njs-sequence-diagrams\n allows you to draws simple SVG sequence diagrams from textual representation of the diagram. You can find more information about js-sequence-diagrams from it's \nwebsite\n or \nGithub\n.\n\n\nExamples\n\n\n\n\n\n\n\n\n\nAlice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nvar diagram = Diagram.parse(\"A->B: Does something\");\ndiagram.drawSVG('diagram');\n\n\n\n\n\n$(\".diagram\").sequenceDiagram({theme: 'simple'});", 
            "title": "js-sequence-diagrams"
        }, 
        {
            "location": "/js-sequence-diagrams/#overview", 
            "text": "js-sequence-diagrams  allows you to draws simple SVG sequence diagrams from textual representation of the diagram. You can find more information about js-sequence-diagrams from it's  website  or  Github .", 
            "title": "Overview"
        }, 
        {
            "location": "/js-sequence-diagrams/#examples", 
            "text": "Alice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!       \nvar diagram = Diagram.parse(\"A->B: Does something\");\ndiagram.drawSVG('diagram');  \n$(\".diagram\").sequenceDiagram({theme: 'simple'});", 
            "title": "Examples"
        }, 
        {
            "location": "/datatables/", 
            "text": "Overview\n\n\nDataTables\n is a table enhancing plug-in for the jQuery Javascript library, adding sorting, paging and filtering abilities to plain HTML tables with minimal effort. You can find more information about DataTables from it's \nwebsite\n or \nGithub\n.\n\n\nExamples\n\n\n\n    \n\n        \n\n            \nLibrary\n\n            \nDescription\n\n        \n\n    \n\n    \n\n        \n\n            \nFlowchart.js\n\n            \nAllows you to draw simple SVG flow chart diagrams from textual representation of the diagram.\n\n        \n\n        \n\n            \njs-sequence-diagrams\n\n            \nDraws simple SVG sequence diagrams from textual representation of the diagram \n\n        \n\n        \n\n            \nDataTables\n\n            \nAdd advanced interaction controls to any HTML \n\n        \n\n        \n\n            \nmermaid\n\n            \nGeneration of diagrams and flowcharts from text in a similar manner as markdown\n\n        \n\n        \n\n            \nChartJS\n\n            \ndesc\n\n        \n\n        \n\n            \nVisJS\n\n            \ndesc\n\n        \n\n        \n\n            \nAwesause\n\n            \ndesc\n\n        \n\n        \n\n            \nLib2me\n\n            \ndesc\n\n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n$(document).ready( function () { $('#table_id').DataTable(); } );", 
            "title": "DataTables"
        }, 
        {
            "location": "/datatables/#overview", 
            "text": "DataTables  is a table enhancing plug-in for the jQuery Javascript library, adding sorting, paging and filtering abilities to plain HTML tables with minimal effort. You can find more information about DataTables from it's  website  or  Github .", 
            "title": "Overview"
        }, 
        {
            "location": "/datatables/#examples", 
            "text": "Library \n             Description \n         \n     \n     \n         \n             Flowchart.js \n             Allows you to draw simple SVG flow chart diagrams from textual representation of the diagram. \n         \n         \n             js-sequence-diagrams \n             Draws simple SVG sequence diagrams from textual representation of the diagram  \n         \n         \n             DataTables \n             Add advanced interaction controls to any HTML  \n         \n         \n             mermaid \n             Generation of diagrams and flowcharts from text in a similar manner as markdown \n         \n         \n             ChartJS \n             desc \n         \n         \n             VisJS \n             desc \n         \n         \n             Awesause \n             desc \n         \n         \n             Lib2me \n             desc \n         \n          \n$(document).ready( function () { $('#table_id').DataTable(); } );", 
            "title": "Examples"
        }, 
        {
            "location": "/mermaid/", 
            "text": "Overview\n\n\nmermaid\n allows you to create diagrams and flowcharts from text in a similar manner as markdown. You can find more information about mermaid from it's \nwebsite\n or \nGithub\n.\n\n\n\n\n\n\nmermaid.initialize({startOnLoad:true});\n\n\nExamples\n\n\n\ngraph TB\n    A[Hard edge] -->|Link text| B(Round edge)\n    B --> C{Decision}\n    C -->|One| D[Result one]\n    C -->|Two| E[Result two]\n\n\n\n\n\n\n\n\ngraph LR\n    A[Square Rect] -- Link text --> B((Circle))\n    A --> C(Round Rect)\n    B --> D{Rhombus}\n    C --> D\n\n\n\n\n\n\n\n\ngraph TB\n         subgraph one\n         a1-->a2\n         end\n         subgraph two\n         b1-->b2\n         end\n         subgraph three\n         c1-->c2\n         end\n         c1-->a2\n\n\n\n\n\n\n\n\ngraph TB\n    sq[Square shape] --> ci((Circle shape))\n\n    subgraph A subgraph\n        od>Odd shape]-- Two line\nedge comment --> ro\n        di{Diamond with \n line break} -.-> ro(Rounded\nsquare\nshape)\n        di==>ro2(Rounded square shape)\n    end\n\n    %% Notice that no text in shape are added here instead that is appended further down\n    e --> od3>Really long text with linebreak\nin an Odd shape]\n\n    %% Comments after double percent signs\n    e((Inner / circle\nand some odd \nspecial characters)) --> f(,.?!+-*\u0632)\n\n    cyr[Cyrillic]-->cyr2((Circle shape \u041d\u0430\u0447\u0430\u043b\u043e));\n\n     classDef green fill:#9f6,stroke:#333,stroke-width:2px;\n     classDef orange fill:#f96,stroke:#333,stroke-width:4px;\n     class sq,e green\n     class di orange\n\n\n\n\n\n\n\n\nsequenceDiagram\n    Bruce->>Steve: Hey, can we get a raise?\n    Steve-->>Bruce: Sorry, I got The Look.\n    Bruce->>Steve: What look?\n    Steve-->>Bruce: The Look.\n    Bruce->>Steve: Uh, what does that mean?\n    Steve-->>Bruce: Nancy gave me The Look.\n    Bruce->>Steve: So, did you even ask her?\n    Steve-->>Bruce: No. I got The Look.\n    Bruce->>Steve: So, do we get our raise or not?\n    Steve-->>Bruce: No. Nothing I can do.\n\n\n\n\n\n\n\n\nsequenceDiagram\n    Alice ->> Bob: Hello Bob, how are you?\n    Bob-->>John: How about you John?\n    Bob--x Alice: I am good thanks!\n    Bob-x John: I am good thanks!\n    Note right of John: Bob thinks a long\nlong time, so long\nthat the text does\nnot fit on a row.\n\n    Bob-->Alice: Checking with John...\n    Alice->John: Yes... John, how are you?  \n\n\n\n\n\n\n\n\nsequenceDiagram\n    loop Daily query\n        Alice->>Bob: Hello Bob, how are you?\n        alt is sick\n            Bob->>Alice: Not so good :(\n        else is well\n            Bob->>Alice: Feeling fresh like a daisy\n        end\n\n        opt Extra response\n            Bob->>Alice: Thanks for asking\n        end\n    end\n\n\n\n\n\n\n\n\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    loop Healthcheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts\nprevail...\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!\n\n\n\n\n\n\n\n\ngantt\n    title A Gantt Diagram\n\n    section Section\n    A task           :a1, 2014-01-01, 30d\n    Another task     :after a1  , 20d\n    section Another\n    Task in sec      :2014-01-12  , 12d\n    anther task      : 24d\n\n\n\n\n\n\n\nInstructions\n\n\nThis was accomplished just by including the mermaid.min.js and mermain.css files\nwith one slight modification to the mermain.css file which is shown below.\n\n\n/** Section styling */\n.section {\n  stroke: none; \n/* below commented out because it conflicts with the readthedocs theme */\n/*  opacity: 0.2; */\n}", 
            "title": "mermaid"
        }, 
        {
            "location": "/mermaid/#overview", 
            "text": "mermaid  allows you to create diagrams and flowcharts from text in a similar manner as markdown. You can find more information about mermaid from it's  website  or  Github .    mermaid.initialize({startOnLoad:true});", 
            "title": "Overview"
        }, 
        {
            "location": "/mermaid/#examples", 
            "text": "graph TB\n    A[Hard edge] -->|Link text| B(Round edge)\n    B --> C{Decision}\n    C -->|One| D[Result one]\n    C -->|Two| E[Result two]   \ngraph LR\n    A[Square Rect] -- Link text --> B((Circle))\n    A --> C(Round Rect)\n    B --> D{Rhombus}\n    C --> D   \ngraph TB\n         subgraph one\n         a1-->a2\n         end\n         subgraph two\n         b1-->b2\n         end\n         subgraph three\n         c1-->c2\n         end\n         c1-->a2   \ngraph TB\n    sq[Square shape] --> ci((Circle shape))\n\n    subgraph A subgraph\n        od>Odd shape]-- Two line edge comment --> ro\n        di{Diamond with   line break} -.-> ro(Rounded square shape)\n        di==>ro2(Rounded square shape)\n    end\n\n    %% Notice that no text in shape are added here instead that is appended further down\n    e --> od3>Really long text with linebreak in an Odd shape]\n\n    %% Comments after double percent signs\n    e((Inner / circle and some odd  special characters)) --> f(,.?!+-*\u0632)\n\n    cyr[Cyrillic]-->cyr2((Circle shape \u041d\u0430\u0447\u0430\u043b\u043e));\n\n     classDef green fill:#9f6,stroke:#333,stroke-width:2px;\n     classDef orange fill:#f96,stroke:#333,stroke-width:4px;\n     class sq,e green\n     class di orange   \nsequenceDiagram\n    Bruce->>Steve: Hey, can we get a raise?\n    Steve-->>Bruce: Sorry, I got The Look.\n    Bruce->>Steve: What look?\n    Steve-->>Bruce: The Look.\n    Bruce->>Steve: Uh, what does that mean?\n    Steve-->>Bruce: Nancy gave me The Look.\n    Bruce->>Steve: So, did you even ask her?\n    Steve-->>Bruce: No. I got The Look.\n    Bruce->>Steve: So, do we get our raise or not?\n    Steve-->>Bruce: No. Nothing I can do.   \nsequenceDiagram\n    Alice ->> Bob: Hello Bob, how are you?\n    Bob-->>John: How about you John?\n    Bob--x Alice: I am good thanks!\n    Bob-x John: I am good thanks!\n    Note right of John: Bob thinks a long long time, so long that the text does not fit on a row.\n\n    Bob-->Alice: Checking with John...\n    Alice->John: Yes... John, how are you?     \nsequenceDiagram\n    loop Daily query\n        Alice->>Bob: Hello Bob, how are you?\n        alt is sick\n            Bob->>Alice: Not so good :(\n        else is well\n            Bob->>Alice: Feeling fresh like a daisy\n        end\n\n        opt Extra response\n            Bob->>Alice: Thanks for asking\n        end\n    end   \nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    loop Healthcheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts prevail...\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!   \ngantt\n    title A Gantt Diagram\n\n    section Section\n    A task           :a1, 2014-01-01, 30d\n    Another task     :after a1  , 20d\n    section Another\n    Task in sec      :2014-01-12  , 12d\n    anther task      : 24d", 
            "title": "Examples"
        }, 
        {
            "location": "/mermaid/#instructions", 
            "text": "This was accomplished just by including the mermaid.min.js and mermain.css files\nwith one slight modification to the mermain.css file which is shown below.  /** Section styling */\n.section {\n  stroke: none; \n/* below commented out because it conflicts with the readthedocs theme */\n/*  opacity: 0.2; */\n}", 
            "title": "Instructions"
        }, 
        {
            "location": "/chartistjs/", 
            "text": "Overview\n\n\nChartist.js\n is a simple responsive charting library built with SVG. You can find more information about Chartist.js from it's \nwebsite\n or \nGithub\n.\n\n\nExamples", 
            "title": "Chartist.js"
        }, 
        {
            "location": "/chartistjs/#overview", 
            "text": "Chartist.js  is a simple responsive charting library built with SVG. You can find more information about Chartist.js from it's  website  or  Github .", 
            "title": "Overview"
        }, 
        {
            "location": "/chartistjs/#examples", 
            "text": "", 
            "title": "Examples"
        }, 
        {
            "location": "/chartjs/", 
            "text": "Overview\n\n\nChart.js\n is a simple HTML5 Charts using the canvas element. You can find more information about Chart.js from it's \nwebsite\n or \nGithub\n.\n\n\nExamples", 
            "title": "Chart.js"
        }, 
        {
            "location": "/chartjs/#overview", 
            "text": "Chart.js  is a simple HTML5 Charts using the canvas element. You can find more information about Chart.js from it's  website  or  Github .", 
            "title": "Overview"
        }, 
        {
            "location": "/chartjs/#examples", 
            "text": "", 
            "title": "Examples"
        }, 
        {
            "location": "/fontawesome/", 
            "text": "Overview\n\n\nFont Awesome\n Font Awesome gives you scalable\n vector icons that can instantly be customized -- size, color, drop shadow, and \nanything that can be done with the power of CSS.\n\n\nFont Awesome Markdown\n A \nMarkdown extension that looks for things like \n:fa-coffee:\n and replaces them \nwith the Font Awesome icon markup.\n\n\nExamples\n\n\n These examples use the normal font awesome markup. \n\n\ni class=\nfa fa-camera-retro fa-lg\n/i\n fa-lg\n\ni class=\nfa fa-camera-retro fa-2x\n/i\n fa-2x\n\ni class=\nfa fa-camera-retro fa-3x\n/i\n fa-3x\n\ni class=\nfa fa-camera-retro fa-4x\n/i\n fa-4x\n\ni class=\nfa fa-camera-retro fa-5x\n/i\n fa-5x\n\n\n\n\n fa-lg\n\n fa-2x\n\n fa-3x\n\n fa-4x\n\n fa-5x\n\n\n These examples use the fontawesome_markdown extension \n\n\ni 3\n :fa-coffee: and I 3\n :fa-beer: and I'll buy Wayland a ten of both. \n\n\n\n\ni \n3 \n and I \n3 \n and I'll buy Wayland a ten of both. \n\n\n\n\n Reference \n : \nGithub Issue #1\n\n\n Reference \n : \nGithub Issue #2\n\n\n\n\n\n\nInstructions\n\n\nFor the first example, all that is needed is to include the font awesome css \nusing the maxcdn link.  As shown below.\n\n\nlink rel=\nstylesheet\n href=\nhttps://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css\n\n\n\n\n\nFor the 2nd example, you must install the fontawesome_markdown extension with\npip.  Right now version 0.2.5 is the latest but it doesn't work so you have\nto install the latest version from the github repository.  You can do that\nwith the below command\n\n\npip install https://github.com/bmcorser/fontawesome-markdown/archive/master.zip\n\n\n\n\nYou may need to include \n--upgrade\n in the above command if you already have \nthis extension installed.\n\n\nThen add the below to your mkdocs.yml file.\n\n\nmarkdown_extensions:\n      - fontawesome_markdown\n\n\n\n\nThat's it.", 
            "title": "Font Awesome"
        }, 
        {
            "location": "/fontawesome/#overview", 
            "text": "Font Awesome  Font Awesome gives you scalable\n vector icons that can instantly be customized -- size, color, drop shadow, and \nanything that can be done with the power of CSS.  Font Awesome Markdown  A \nMarkdown extension that looks for things like  :fa-coffee:  and replaces them \nwith the Font Awesome icon markup.", 
            "title": "Overview"
        }, 
        {
            "location": "/fontawesome/#examples", 
            "text": "These examples use the normal font awesome markup.   i class= fa fa-camera-retro fa-lg /i  fa-lg i class= fa fa-camera-retro fa-2x /i  fa-2x i class= fa fa-camera-retro fa-3x /i  fa-3x i class= fa fa-camera-retro fa-4x /i  fa-4x i class= fa fa-camera-retro fa-5x /i  fa-5x   fa-lg  fa-2x  fa-3x  fa-4x  fa-5x   These examples use the fontawesome_markdown extension   i 3  :fa-coffee: and I 3  :fa-beer: and I'll buy Wayland a ten of both.   i  3   and I  3   and I'll buy Wayland a ten of both.     Reference   :  Github Issue #1   Reference   :  Github Issue #2", 
            "title": "Examples"
        }, 
        {
            "location": "/fontawesome/#instructions", 
            "text": "For the first example, all that is needed is to include the font awesome css \nusing the maxcdn link.  As shown below.  link rel= stylesheet  href= https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css   For the 2nd example, you must install the fontawesome_markdown extension with\npip.  Right now version 0.2.5 is the latest but it doesn't work so you have\nto install the latest version from the github repository.  You can do that\nwith the below command  pip install https://github.com/bmcorser/fontawesome-markdown/archive/master.zip  You may need to include  --upgrade  in the above command if you already have \nthis extension installed.  Then add the below to your mkdocs.yml file.  markdown_extensions:\n      - fontawesome_markdown  That's it.", 
            "title": "Instructions"
        }
    ]
}